

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Feb 02 11:05:20 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 1.45
    16                           ; Generated 16/11/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     
    50                           	psect	idataCOMRAM
    51  007ECC                     __pidataCOMRAM:
    52                           	opt stack 0
    53                           
    54                           ;initializer for _display
    55  007ECC  003F               	dw	63
    56  007ECE  0006               	dw	6
    57  007ED0  005B               	dw	91
    58  007ED2  004F               	dw	79
    59  007ED4  0066               	dw	102
    60  007ED6  006D               	dw	109
    61  007ED8  007D               	dw	125
    62  007EDA  0007               	dw	7
    63  007EDC  007F               	dw	127
    64  007EDE  0067               	dw	103
    65  0000                     _PORTD	set	3971
    66  0000                     _LATAbits	set	3977
    67  0000                     _PORTBbits	set	3969
    68  0000                     _INTCON2bits	set	4081
    69  0000                     _TRISBbits	set	3987
    70  0000                     _TRISD	set	3989
    71  0000                     _TRISA	set	3986
    72  0000                     _LATD	set	3980
    73  0000                     _LATA	set	3977
    74  0000                     _ADCON1bits	set	4033
    75                           
    76                           ; #config settings
    77  0000                     
    78                           	psect	cinit
    79  007F02                     __pcinit:
    80                           	opt stack 0
    81  007F02                     start_initialization:
    82                           	opt stack 0
    83  007F02                     __initialization:
    84                           	opt stack 0
    85                           
    86                           ; Initialize objects allocated to COMRAM (20 bytes)
    87                           ; load TBLPTR registers with __pidataCOMRAM
    88  007F02  0ECC               	movlw	low __pidataCOMRAM
    89  007F04  6EF6               	movwf	tblptrl,c
    90  007F06  0E7E               	movlw	high __pidataCOMRAM
    91  007F08  6EF7               	movwf	tblptrh,c
    92  007F0A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    93  007F0C  6EF8               	movwf	tblptru,c
    94  007F0E  EE00  F001         	lfsr	0,__pdataCOMRAM
    95  007F12  EE10 F014          	lfsr	1,20
    96  007F16                     copy_data0:
    97  007F16  0009               	tblrd		*+
    98  007F18  CFF5 FFEE          	movff	tablat,postinc0
    99  007F1C  50E5               	movf	postdec1,w,c
   100  007F1E  50E1               	movf	fsr1l,w,c
   101  007F20  E1FA               	bnz	copy_data0
   102                           
   103                           ; Clear objects allocated to COMRAM (2 bytes)
   104  007F22  6A16               	clrf	(__pbssCOMRAM+1)& (0+255),c
   105  007F24  6A15               	clrf	__pbssCOMRAM& (0+255),c
   106  007F26                     end_of_initialization:
   107                           	opt stack 0
   108  007F26                     __end_of__initialization:
   109                           	opt stack 0
   110  007F26  0100               	movlb	0
   111  007F28  EF96  F03F         	goto	_main	;jump to C main() function
   112                           tblptru	equ	0xFF8
   113                           tblptrh	equ	0xFF7
   114                           tblptrl	equ	0xFF6
   115                           tablat	equ	0xFF5
   116                           postinc0	equ	0xFEE
   117                           postdec1	equ	0xFE5
   118                           fsr1l	equ	0xFE1
   119                           
   120                           	psect	bssCOMRAM
   121  000015                     __pbssCOMRAM:
   122                           	opt stack 0
   123  000015                     _i:
   124                           	opt stack 0
   125  000015                     	ds	2
   126                           tblptru	equ	0xFF8
   127                           tblptrh	equ	0xFF7
   128                           tblptrl	equ	0xFF6
   129                           tablat	equ	0xFF5
   130                           postinc0	equ	0xFEE
   131                           postdec1	equ	0xFE5
   132                           fsr1l	equ	0xFE1
   133                           
   134                           	psect	dataCOMRAM
   135  000001                     __pdataCOMRAM:
   136                           	opt stack 0
   137  000001                     _display:
   138                           	opt stack 0
   139  000001                     	ds	20
   140                           tblptru	equ	0xFF8
   141                           tblptrh	equ	0xFF7
   142                           tblptrl	equ	0xFF6
   143                           tablat	equ	0xFF5
   144                           postinc0	equ	0xFEE
   145                           postdec1	equ	0xFE5
   146                           fsr1l	equ	0xFE1
   147                           
   148                           	psect	cstackCOMRAM
   149  000017                     __pcstackCOMRAM:
   150                           	opt stack 0
   151  000017                     ??_main:
   152                           
   153                           ; 1 bytes @ 0x0
   154  000017                     	ds	2
   155                           tblptru	equ	0xFF8
   156                           tblptrh	equ	0xFF7
   157                           tblptrl	equ	0xFF6
   158                           tablat	equ	0xFF5
   159                           postinc0	equ	0xFEE
   160                           postdec1	equ	0xFE5
   161                           fsr1l	equ	0xFE1
   162                           
   163 ;;
   164 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   165 ;;
   166 ;; *************** function _main *****************
   167 ;; Defined at:
   168 ;;		line 39 in file "Programa_principal.c"
   169 ;; Parameters:    Size  Location     Type
   170 ;;		None
   171 ;; Auto vars:     Size  Location     Type
   172 ;;		None
   173 ;; Return value:  Size  Location     Type
   174 ;;                  1    wreg      void 
   175 ;; Registers used:
   176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   177 ;; Tracked objects:
   178 ;;		On entry : 0/0
   179 ;;		On exit  : 0/0
   180 ;;		Unchanged: 0/0
   181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   182 ;;      Params:         0       0       0       0       0       0       0       0       0
   183 ;;      Locals:         0       0       0       0       0       0       0       0       0
   184 ;;      Temps:          2       0       0       0       0       0       0       0       0
   185 ;;      Totals:         2       0       0       0       0       0       0       0       0
   186 ;;Total ram usage:        2 bytes
   187 ;; Hardware stack levels required when called:    1
   188 ;; This function calls:
   189 ;;		_initPort
   190 ;; This function is called by:
   191 ;;		Startup code after reset
   192 ;; This function uses a non-reentrant model
   193 ;;
   194                           
   195                           	psect	text0
   196  007F2C                     __ptext0:
   197                           	opt stack 0
   198  007F2C                     _main:
   199                           	opt stack 30
   200                           
   201                           ;Programa_principal.c: 40: initPort();
   202                           
   203                           ;incstack = 0
   204  007F2C  EC70  F03F         	call	_initPort	;wreg free
   205  007F30                     
   206                           ;Programa_principal.c: 42: if (PORTBbits.RB4 == 0){
   207  007F30  B881               	btfsc	3969,4,c	;volatile
   208  007F32  D02A               	goto	l35
   209                           
   210                           ;Programa_principal.c: 43: LATAbits.LA0 = 1;
   211  007F34  8089               	bsf	3977,0,c	;volatile
   212                           
   213                           ;Programa_principal.c: 44: LATAbits.LA1 = 0;
   214  007F36  9289               	bcf	3977,1,c	;volatile
   215                           
   216                           ;Programa_principal.c: 45: for(i=0;i<10;i++){
   217  007F38  0E00               	movlw	0
   218  007F3A  6E16               	movwf	_i+1,c
   219  007F3C  0E00               	movlw	0
   220  007F3E  6E15               	movwf	_i,c
   221  007F40                     l688:
   222  007F40  BE16               	btfsc	_i+1,7,c
   223  007F42  D006               	goto	l36
   224  007F44  5016               	movf	_i+1,w,c
   225  007F46  E157               	bnz	l732
   226  007F48  0E0A               	movlw	10
   227  007F4A  5C15               	subwf	_i,w,c
   228  007F4C  B0D8               	btfsc	status,0,c
   229  007F4E  D053               	goto	l732
   230  007F50                     l36:
   231                           
   232                           ;Programa_principal.c: 46: PORTD = display[i];
   233  007F50  90D8               	bcf	status,0,c
   234  007F52  3415               	rlcf	_i,w,c
   235  007F54  6ED9               	movwf	fsr2l,c
   236  007F56  3416               	rlcf	_i+1,w,c
   237  007F58  6EDA               	movwf	fsr2h,c
   238  007F5A  0E01               	movlw	low _display
   239  007F5C  26D9               	addwf	fsr2l,f,c
   240  007F5E  0E00               	movlw	high _display
   241  007F60  22DA               	addwfc	fsr2h,f,c
   242  007F62  50DF               	movf	indf2,w,c
   243  007F64  6E83               	movwf	3971,c	;volatile
   244                           
   245                           ;Programa_principal.c: 47: _delay((unsigned long)((500)*(20000000L/4000.0)));
   246  007F66  0E0D               	movlw	13
   247  007F68  6E18               	movwf	(??_main+1)& (0+255),c
   248  007F6A  0EAF               	movlw	175
   249  007F6C  6E17               	movwf	??_main& (0+255),c
   250  007F6E  0EB6               	movlw	182
   251  007F70                     u87:
   252  007F70  2EE8               	decfsz	wreg,f,c
   253  007F72  D7FE               	bra	u87
   254  007F74  2E17               	decfsz	??_main& (0+255),f,c
   255  007F76  D7FC               	bra	u87
   256  007F78  2E18               	decfsz	(??_main+1)& (0+255),f,c
   257  007F7A  D7FA               	bra	u87
   258  007F7C  D000               	nop2	
   259  007F7E  4A15               	infsnz	_i,f,c
   260  007F80  2A16               	incf	_i+1,f,c
   261  007F82  D7DE               	goto	l688
   262  007F84                     l702:
   263                           
   264                           ;Programa_principal.c: 50: LATAbits.LA0 = 0;
   265  007F84  9089               	bcf	3977,0,c	;volatile
   266  007F86  D03A               	goto	L1
   267  007F88                     l35:
   268                           
   269                           ;Programa_principal.c: 53: else if(PORTBbits.RB0 == 0){
   270  007F88  B081               	btfsc	3969,0,c	;volatile
   271  007F8A  D023               	goto	l39
   272                           
   273                           ;Programa_principal.c: 54: LATAbits.LA0 = 0;
   274  007F8C  9089               	bcf	3977,0,c	;volatile
   275                           
   276                           ;Programa_principal.c: 55: LATAbits.LA1 = 1;
   277  007F8E  8289               	bsf	3977,1,c	;volatile
   278                           
   279                           ;Programa_principal.c: 56: for(i=9;i>=0;i--){
   280  007F90  0E00               	movlw	0
   281  007F92  6E16               	movwf	_i+1,c
   282  007F94  0E09               	movlw	9
   283  007F96  6E15               	movwf	_i,c
   284  007F98                     l710:
   285  007F98  BE16               	btfsc	_i+1,7,c
   286  007F9A  D02D               	goto	l732
   287                           
   288                           ;Programa_principal.c: 57: PORTD = display[i];
   289  007F9C  90D8               	bcf	status,0,c
   290  007F9E  3415               	rlcf	_i,w,c
   291  007FA0  6ED9               	movwf	fsr2l,c
   292  007FA2  3416               	rlcf	_i+1,w,c
   293  007FA4  6EDA               	movwf	fsr2h,c
   294  007FA6  0E01               	movlw	low _display
   295  007FA8  26D9               	addwf	fsr2l,f,c
   296  007FAA  0E00               	movlw	high _display
   297  007FAC  22DA               	addwfc	fsr2h,f,c
   298  007FAE  50DF               	movf	indf2,w,c
   299  007FB0  6E83               	movwf	3971,c	;volatile
   300                           
   301                           ;Programa_principal.c: 58: _delay((unsigned long)((500)*(20000000L/4000.0)));
   302  007FB2  0E0D               	movlw	13
   303  007FB4  6E18               	movwf	(??_main+1)& (0+255),c
   304  007FB6  0EAF               	movlw	175
   305  007FB8  6E17               	movwf	??_main& (0+255),c
   306  007FBA  0EB6               	movlw	182
   307  007FBC                     u97:
   308  007FBC  2EE8               	decfsz	wreg,f,c
   309  007FBE  D7FE               	bra	u97
   310  007FC0  2E17               	decfsz	??_main& (0+255),f,c
   311  007FC2  D7FC               	bra	u97
   312  007FC4  2E18               	decfsz	(??_main+1)& (0+255),f,c
   313  007FC6  D7FA               	bra	u97
   314  007FC8  D000               	nop2	
   315  007FCA  0615               	decf	_i,f,c
   316  007FCC  A0D8               	btfss	status,0,c
   317  007FCE  0616               	decf	_i+1,f,c
   318  007FD0  D7E3               	goto	l710
   319  007FD2                     l39:
   320                           
   321                           ;Programa_principal.c: 64: else if(PORTBbits.RB1 == 0){
   322  007FD2  B281               	btfsc	3969,1,c	;volatile
   323  007FD4  D7AD               	goto	l34
   324                           
   325                           ;Programa_principal.c: 65: LATAbits.LA0 = 1;
   326  007FD6  8089               	bsf	3977,0,c	;volatile
   327                           
   328                           ;Programa_principal.c: 66: LATAbits.LA1 = 1;
   329  007FD8  8289               	bsf	3977,1,c	;volatile
   330                           
   331                           ;Programa_principal.c: 67: PORTD = display[4];
   332  007FDA  C009  FF83         	movff	_display+8,3971	;volatile
   333                           
   334                           ;Programa_principal.c: 68: _delay((unsigned long)((500)*(20000000L/4000.0)));
   335  007FDE  0E0D               	movlw	13
   336  007FE0  6E18               	movwf	(??_main+1)& (0+255),c
   337  007FE2  0EAF               	movlw	175
   338  007FE4  6E17               	movwf	??_main& (0+255),c
   339  007FE6  0EB6               	movlw	182
   340  007FE8                     u107:
   341  007FE8  2EE8               	decfsz	wreg,f,c
   342  007FEA  D7FE               	bra	u107
   343  007FEC  2E17               	decfsz	??_main& (0+255),f,c
   344  007FEE  D7FC               	bra	u107
   345  007FF0  2E18               	decfsz	(??_main+1)& (0+255),f,c
   346  007FF2  D7FA               	bra	u107
   347  007FF4  D000               	nop2	
   348  007FF6                     l732:
   349                           
   350                           ;Programa_principal.c: 69: PORTD = 0;
   351  007FF6  0E00               	movlw	0
   352  007FF8  6E83               	movwf	3971,c	;volatile
   353  007FFA  D7C4               	goto	l702
   354  007FFC                     L1:
   355                           
   356                           ;Programa_principal.c: 71: LATAbits.LA1 = 0;
   357                           
   358                           ;Programa_principal.c: 70: LATAbits.LA0 = 0;
   359  007FFC  9289               	bcf	3977,1,c	;volatile
   360  007FFE  D798               	goto	l34
   361  008000                     __end_of_main:
   362                           	opt stack 0
   363                           tblptru	equ	0xFF8
   364                           tblptrh	equ	0xFF7
   365                           tblptrl	equ	0xFF6
   366                           tablat	equ	0xFF5
   367                           postinc0	equ	0xFEE
   368                           wreg	equ	0xFE8
   369                           postdec1	equ	0xFE5
   370                           fsr1l	equ	0xFE1
   371                           indf2	equ	0xFDF
   372                           fsr2h	equ	0xFDA
   373                           fsr2l	equ	0xFD9
   374                           status	equ	0xFD8
   375                           
   376 ;; *************** function _initPort *****************
   377 ;; Defined at:
   378 ;;		line 27 in file "Programa_principal.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;		None
   381 ;; Auto vars:     Size  Location     Type
   382 ;;		None
   383 ;; Return value:  Size  Location     Type
   384 ;;                  1    wreg      void 
   385 ;; Registers used:
   386 ;;		wreg, status,2
   387 ;; Tracked objects:
   388 ;;		On entry : 0/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   392 ;;      Params:         0       0       0       0       0       0       0       0       0
   393 ;;      Locals:         0       0       0       0       0       0       0       0       0
   394 ;;      Temps:          0       0       0       0       0       0       0       0       0
   395 ;;      Totals:         0       0       0       0       0       0       0       0       0
   396 ;;Total ram usage:        0 bytes
   397 ;; Hardware stack levels used:    1
   398 ;; This function calls:
   399 ;;		Nothing
   400 ;; This function is called by:
   401 ;;		_main
   402 ;; This function uses a non-reentrant model
   403 ;;
   404                           
   405                           	psect	text1
   406  007EE0                     __ptext1:
   407                           	opt stack 0
   408  007EE0                     _initPort:
   409                           	opt stack 30
   410                           
   411                           ;Programa_principal.c: 28: ADCON1bits.PCFG = 0xFF;
   412                           
   413                           ;incstack = 0
   414  007EE0  80C1               	bsf	4033,0,c	;volatile
   415  007EE2  82C1               	bsf	4033,1,c	;volatile
   416  007EE4  84C1               	bsf	4033,2,c	;volatile
   417  007EE6  86C1               	bsf	4033,3,c	;volatile
   418                           
   419                           ;Programa_principal.c: 29: LATA = 0;
   420  007EE8  0E00               	movlw	0
   421  007EEA  6E89               	movwf	3977,c	;volatile
   422                           
   423                           ;Programa_principal.c: 30: LATD = 0;
   424  007EEC  0E00               	movlw	0
   425  007EEE  6E8C               	movwf	3980,c	;volatile
   426                           
   427                           ;Programa_principal.c: 31: TRISA = 0;
   428  007EF0  0E00               	movlw	0
   429  007EF2  6E92               	movwf	3986,c	;volatile
   430                           
   431                           ;Programa_principal.c: 32: TRISD = 0;
   432  007EF4  0E00               	movlw	0
   433  007EF6  6E95               	movwf	3989,c	;volatile
   434                           
   435                           ;Programa_principal.c: 33: TRISBbits.RB0 = 1;
   436  007EF8  8093               	bsf	3987,0,c	;volatile
   437                           
   438                           ;Programa_principal.c: 34: TRISBbits.RB1 = 1;
   439  007EFA  8293               	bsf	3987,1,c	;volatile
   440                           
   441                           ;Programa_principal.c: 35: TRISBbits.RB4 = 1;
   442  007EFC  8893               	bsf	3987,4,c	;volatile
   443                           
   444                           ;Programa_principal.c: 36: INTCON2bits.RBPU = 0;
   445  007EFE  9EF1               	bcf	intcon2,7,c	;volatile
   446  007F00  0012               	return		;funcret
   447  007F02                     __end_of_initPort:
   448                           	opt stack 0
   449  0000                     tblptru	equ	0xFF8
   450                           tblptrh	equ	0xFF7
   451                           tblptrl	equ	0xFF6
   452                           tablat	equ	0xFF5
   453                           intcon2	equ	0xFF1
   454                           postinc0	equ	0xFEE
   455                           wreg	equ	0xFE8
   456                           postdec1	equ	0xFE5
   457                           fsr1l	equ	0xFE1
   458                           indf2	equ	0xFDF
   459                           fsr2h	equ	0xFDA
   460                           fsr2l	equ	0xFD9
   461                           status	equ	0xFD8
   462                           tblptru	equ	0xFF8
   463                           tblptrh	equ	0xFF7
   464                           tblptrl	equ	0xFF6
   465                           tablat	equ	0xFF5
   466                           intcon2	equ	0xFF1
   467                           postinc0	equ	0xFEE
   468                           wreg	equ	0xFE8
   469                           postdec1	equ	0xFE5
   470                           fsr1l	equ	0xFE1
   471                           indf2	equ	0xFDF
   472                           fsr2h	equ	0xFDA
   473                           fsr2l	equ	0xFD9
   474                           status	equ	0xFD8
   475                           
   476                           	psect	rparam
   477  0000                     tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           intcon2	equ	0xFF1
   482                           postinc0	equ	0xFEE
   483                           wreg	equ	0xFE8
   484                           postdec1	equ	0xFE5
   485                           fsr1l	equ	0xFE1
   486                           indf2	equ	0xFDF
   487                           fsr2h	equ	0xFDA
   488                           fsr2l	equ	0xFD9
   489                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2      24
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
                           _initPort
 ---------------------------------------------------------------------------------
 (1) _initPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initPort

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2      18       1       25.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      18      20        0.0%
DATA                 0      0      18       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Feb 02 11:05:20 2018

                      _i 0015                       l34 7F30                       l35 7F88  
                     l36 7F50                       l39 7FD2                       u87 7F70  
                     u97 7FBC              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l710 7F98                      l702 7F84                      l732 7FF6  
                    l688 7F40             __CFG_CPB$OFF 000000                      u107 7FE8  
           __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000                      wreg 000FE8  
           __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   _LATA 000F89                     _LATD 000F8C             __CFG_PWRT$ON 000000  
                   _main 7F2C                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000                    ?_main 0017  
                  _PORTD 000F83            __CFG_USBDIV$1 000000                    _TRISA 000F92  
                  _TRISD 000F95            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    tablat 000FF5  
                  status 000FD8           __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000  
        __initialization 7F02             __end_of_main 8000                   ??_main 0017  
          __activetblptr 000000           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
       __end_of_initPort 7F02             __pdataCOMRAM 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 7F26            ___rparam_used 000001           __pcstackCOMRAM 0017  
        __CFG_VREGEN$OFF 000000                ?_initPort 0017                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7F02                  __ramtop 0800  
                __ptext0 7F2C                  __ptext1 7EE0                  _display 0001  
   end_of_initialization 7F26               ??_initPort 0017                  postdec1 000FE5  
                postinc0 000FEE                _PORTBbits 000F81                _TRISBbits 000F93  
          __pidataCOMRAM 7ECC      start_initialization 7F02         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 0015        __size_of_initPort 0022                 _LATAbits 000F89  
       __CFG_WDTPS$32768 000000               _ADCON1bits 000FC1              _INTCON2bits 000FF1  
              copy_data0 7F16                 __Hrparam 0000                 __Lrparam 0000  
               _initPort 7EE0            __size_of_main 00D4    __CFG_CPUDIV$OSC1_PLL2 000000  
