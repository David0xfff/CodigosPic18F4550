

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon May 14 23:14:38 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11  0000                     
    12                           ; Version 1.45
    13                           ; Generated 16/11/2017 GMT
    14                           ; 
    15                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC18F4550 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     _T2CONbits	set	4042
    47  0000                     _TMR2	set	4044
    48  0000                     _CCP1CON	set	4029
    49  0000                     _T2CON	set	4042
    50  0000                     _TRISCbits	set	3988
    51  0000                     _CCPR1L	set	4030
    52  0000                     _PR2	set	4043
    53  0000                     _PORTDbits	set	3971
    54                           
    55                           ; #config settings
    56  0000                     
    57                           	psect	cinit
    58  007F5C                     __pcinit:
    59                           	opt stack 0
    60  007F5C                     start_initialization:
    61                           	opt stack 0
    62  007F5C                     __initialization:
    63                           	opt stack 0
    64                           
    65                           ; Clear objects allocated to COMRAM (2 bytes)
    66  007F5C  6A05               	clrf	(__pbssCOMRAM+1)& (0+255),c
    67  007F5E  6A04               	clrf	__pbssCOMRAM& (0+255),c
    68  007F60                     end_of_initialization:
    69                           	opt stack 0
    70  007F60                     __end_of__initialization:
    71                           	opt stack 0
    72  007F60  0100               	movlb	0
    73  007F62  EFB3  F03F         	goto	_main	;jump to C main() function
    74                           
    75                           	psect	bssCOMRAM
    76  000004                     __pbssCOMRAM:
    77                           	opt stack 0
    78  000004                     _duty_cicle:
    79                           	opt stack 0
    80  000004                     	ds	2
    81                           
    82                           	psect	cstackCOMRAM
    83  000001                     __pcstackCOMRAM:
    84                           	opt stack 0
    85  000001                     ??_main:
    86                           
    87                           ; 1 bytes @ 0x0
    88  000001                     	ds	3
    89                           
    90 ;;
    91 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
    92 ;;
    93 ;; *************** function _main *****************
    94 ;; Defined at:
    95 ;;		line 41 in file "Programa_principal.c"
    96 ;; Parameters:    Size  Location     Type
    97 ;;		None
    98 ;; Auto vars:     Size  Location     Type
    99 ;;		None
   100 ;; Return value:  Size  Location     Type
   101 ;;                  1    wreg      void 
   102 ;; Registers used:
   103 ;;		wreg, status,2, status,0
   104 ;; Tracked objects:
   105 ;;		On entry : 0/0
   106 ;;		On exit  : 0/0
   107 ;;		Unchanged: 0/0
   108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   109 ;;      Params:         0       0       0       0       0       0       0       0       0
   110 ;;      Locals:         0       0       0       0       0       0       0       0       0
   111 ;;      Temps:          3       0       0       0       0       0       0       0       0
   112 ;;      Totals:         3       0       0       0       0       0       0       0       0
   113 ;;Total ram usage:        3 bytes
   114 ;; This function calls:
   115 ;;		Nothing
   116 ;; This function is called by:
   117 ;;		Startup code after reset
   118 ;; This function uses a non-reentrant model
   119 ;;
   120                           
   121                           	psect	text0
   122  007F66                     __ptext0:
   123                           	opt stack 0
   124  007F66                     _main:
   125                           	opt stack 31
   126                           
   127                           ;Programa_principal.c: 42: PORTDbits.RD0 = 1;
   128                           
   129                           ;incstack = 0
   130  007F66  8083               	bsf	3971,0,c	;volatile
   131                           
   132                           ;Programa_principal.c: 43: PORTDbits.RD1 = 1;
   133  007F68  8283               	bsf	3971,1,c	;volatile
   134                           
   135                           ;Programa_principal.c: 44: PR2 = 0x26;
   136  007F6A  0E26               	movlw	38
   137  007F6C  6ECB               	movwf	4043,c	;volatile
   138                           
   139                           ;Programa_principal.c: 45: CCPR1L = 1;
   140  007F6E  0E01               	movlw	1
   141  007F70  6EBE               	movwf	4030,c	;volatile
   142                           
   143                           ;Programa_principal.c: 46: TRISCbits.RC1 = 0;
   144  007F72  9294               	bcf	3988,1,c	;volatile
   145                           
   146                           ;Programa_principal.c: 47: TRISCbits.RC2 = 0;
   147  007F74  9494               	bcf	3988,2,c	;volatile
   148                           
   149                           ;Programa_principal.c: 48: T2CON = 0x03;
   150  007F76  0E03               	movlw	3
   151  007F78  6ECA               	movwf	4042,c	;volatile
   152                           
   153                           ;Programa_principal.c: 49: CCP1CON = 0x0C;
   154  007F7A  0E0C               	movlw	12
   155  007F7C  6EBD               	movwf	4029,c	;volatile
   156                           
   157                           ;Programa_principal.c: 50: TMR2 = 0;
   158  007F7E  0E00               	movlw	0
   159  007F80  6ECC               	movwf	4044,c	;volatile
   160                           
   161                           ;Programa_principal.c: 51: T2CONbits.TMR2ON = 1;
   162  007F82  84CA               	bsf	4042,2,c	;volatile
   163  007F84                     
   164                           ;Programa_principal.c: 63: if(PORTDbits.RD0 == 0){
   165  007F84  B083               	btfsc	3971,0,c	;volatile
   166  007F86  D01B               	goto	l26
   167                           
   168                           ;Programa_principal.c: 64: duty_cicle = duty_cicle + 1;
   169  007F88  0E01               	movlw	1
   170  007F8A  2404               	addwf	_duty_cicle,w,c
   171  007F8C  6E04               	movwf	_duty_cicle,c
   172  007F8E  0E00               	movlw	0
   173  007F90  2005               	addwfc	_duty_cicle+1,w,c
   174  007F92  6E05               	movwf	_duty_cicle+1,c
   175                           
   176                           ;Programa_principal.c: 65: if (duty_cicle > PR2){
   177  007F94  50CB               	movf	4043,w,c	;volatile
   178  007F96  6E01               	movwf	??_main& (0+255),c
   179  007F98  6A02               	clrf	(??_main+1)& (0+255),c
   180  007F9A  5004               	movf	_duty_cicle,w,c
   181  007F9C  5C01               	subwf	??_main,w,c
   182  007F9E  5002               	movf	??_main+1,w,c
   183  007FA0  0A80               	xorlw	128
   184  007FA2  6E03               	movwf	(??_main+2)& (0+255),c
   185  007FA4  5005               	movf	_duty_cicle+1,w,c
   186  007FA6  0A80               	xorlw	128
   187  007FA8  5803               	subwfb	(??_main+2)& (0+255),w,c
   188  007FAA  B0D8               	btfsc	status,0,c
   189  007FAC  D006               	goto	l27
   190                           
   191                           ;Programa_principal.c: 66: duty_cicle = PR2 - 1;
   192  007FAE  0EFF               	movlw	255
   193  007FB0  24CB               	addwf	4043,w,c	;volatile
   194  007FB2  6E04               	movwf	_duty_cicle,c
   195  007FB4  6A05               	clrf	_duty_cicle+1,c
   196  007FB6  0EFF               	movlw	255
   197  007FB8  2205               	addwfc	_duty_cicle+1,f,c
   198  007FBA                     l27:
   199                           
   200                           ;Programa_principal.c: 67: }
   201                           ;Programa_principal.c: 68: CCPR1L = duty_cicle;
   202  007FBA  C004  FFBE         	movff	_duty_cicle,4030	;volatile
   203  007FBE                     l26:
   204                           
   205                           ;Programa_principal.c: 69: }
   206                           ;Programa_principal.c: 70: if(PORTDbits.RD1 == 0){
   207  007FBE  B283               	btfsc	3971,1,c	;volatile
   208  007FC0  D013               	goto	l28
   209                           
   210                           ;Programa_principal.c: 71: duty_cicle = duty_cicle - 1;
   211  007FC2  0EFF               	movlw	255
   212  007FC4  2404               	addwf	_duty_cicle,w,c
   213  007FC6  6E04               	movwf	_duty_cicle,c
   214  007FC8  0EFF               	movlw	255
   215  007FCA  2005               	addwfc	_duty_cicle+1,w,c
   216  007FCC  6E05               	movwf	_duty_cicle+1,c
   217                           
   218                           ;Programa_principal.c: 72: if (duty_cicle < 1){
   219  007FCE  BE05               	btfsc	_duty_cicle+1,7,c
   220  007FD0  D005               	goto	u40
   221  007FD2  5005               	movf	_duty_cicle+1,w,c
   222  007FD4  E107               	bnz	l678
   223  007FD6  0404               	decf	_duty_cicle,w,c
   224  007FD8  B0D8               	btfsc	status,0,c
   225  007FDA  D004               	goto	l29
   226  007FDC                     u40:
   227                           
   228                           ;Programa_principal.c: 73: duty_cicle = 1;
   229  007FDC  0E00               	movlw	0
   230  007FDE  6E05               	movwf	_duty_cicle+1,c
   231  007FE0  0E01               	movlw	1
   232  007FE2  6E04               	movwf	_duty_cicle,c
   233  007FE4                     l29:
   234  007FE4                     l678:
   235                           
   236                           ;Programa_principal.c: 74: }
   237                           ;Programa_principal.c: 75: CCPR1L = duty_cicle;
   238  007FE4  C004  FFBE         	movff	_duty_cicle,4030	;volatile
   239  007FE8                     l28:
   240                           
   241                           ;Programa_principal.c: 76: }
   242                           ;Programa_principal.c: 77: _delay((unsigned long)((50)*(20000000L/4000.0)));
   243  007FE8  0E02               	movlw	2
   244  007FEA  6E02               	movwf	(??_main+1)& (0+255),c
   245  007FEC  0E45               	movlw	69
   246  007FEE  6E01               	movwf	??_main& (0+255),c
   247  007FF0  0EAA               	movlw	170
   248  007FF2                     u57:
   249  007FF2  2EE8               	decfsz	wreg,f,c
   250  007FF4  D7FE               	bra	u57
   251  007FF6  2E01               	decfsz	??_main& (0+255),f,c
   252  007FF8  D7FC               	bra	u57
   253  007FFA  2E02               	decfsz	(??_main+1)& (0+255),f,c
   254  007FFC  D7FA               	bra	u57
   255  007FFE  D7C2               	goto	l25
   256  008000                     __end_of_main:
   257                           	opt stack 0
   258  0000                     wreg	equ	0xFE8
   259                           status	equ	0xFD8
   260                           wreg	equ	0xFE8
   261                           status	equ	0xFD8
   262                           
   263                           	psect	rparam
   264  0000                     wreg	equ	0xFE8
   265                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      3       5       1        5.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       5      20        0.0%
DATA                 0      0       5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon May 14 23:14:38 2018

                     l25 7F84                       l26 7FBE                       l27 7FBA  
                     l28 7FE8                       l29 7FE4                       u40 7FDC  
                     u57 7FF2              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l678 7FE4             __CFG_CPB$OFF 000000                      _PR2 000FCB  
           __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000                      wreg 000FE8  
           __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   _TMR2 000FCC             __CFG_PWRT$ON 000000                     _main 7F66  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000            __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000  
                  ?_main 0001                    _T2CON 000FCA            __CFG_USBDIV$1 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    status 000FD8           __CFG_ICPRT$OFF 000000  
         __CFG_PBADEN$ON 000000          __initialization 7F5C             __end_of_main 8000  
                 ??_main 0001            __activetblptr 000000                   _CCPR1L 000FBE  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000               __accesstop 0060  
__end_of__initialization 7F60            ___rparam_used 000001           __pcstackCOMRAM 0001  
                _CCP1CON 000FBD          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7F5C                  __ramtop 0800  
                __ptext0 7F66                _T2CONbits 000FCA               _duty_cicle 0004  
   end_of_initialization 7F60                _PORTDbits 000F83                _TRISCbits 000F94  
    start_initialization 7F5C         __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0004  
       __CFG_WDTPS$32768 000000                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 009A    __CFG_CPUDIV$OSC1_PLL2 000000  
