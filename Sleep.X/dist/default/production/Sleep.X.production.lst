

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Apr 11 22:54:52 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14  0000                     
    15                           ; Version 2.05
    16                           ; Generated 20/12/2018 GMT
    17                           ; 
    18                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     
    50                           	psect	nvCOMRAM
    51  000001                     __pnvCOMRAM:
    52                           	opt callstack 0
    53  000001                     _w:
    54                           	opt callstack 0
    55  000001                     	ds	2
    56  0000                     _LATDbits	set	3980
    57  0000                     _INTCONbits	set	4082
    58  0000                     _INTCON2bits	set	4081
    59  0000                     _OSCCONbits	set	4051
    60  0000                     _TRISBbits	set	3987
    61  0000                     _TRISD	set	3989
    62  0000                     _ADCON1bits	set	4033
    63                           
    64                           ; #config settings
    65  0000                     
    66                           	psect	cinit
    67  000078                     __pcinit:
    68                           	opt callstack 0
    69  000078                     start_initialization:
    70                           	opt callstack 0
    71  000078                     __initialization:
    72                           	opt callstack 0
    73  000078                     end_of_initialization:
    74                           	opt callstack 0
    75  000078                     __end_of__initialization:
    76                           	opt callstack 0
    77  000078  9005               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    78  00007A  9205               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    79  00007C  0100               	movlb	0
    80  00007E  EF09  F000         	goto	_main	;jump to C main() function
    81                           
    82                           	psect	cstackCOMRAM
    83  000003                     __pcstackCOMRAM:
    84                           	opt callstack 0
    85  000003                     ??_main:
    86  000003                     
    87                           ; 1 bytes @ 0x0
    88  000003                     	ds	2
    89                           
    90 ;;
    91 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    92 ;;
    93 ;; *************** function _main *****************
    94 ;; Defined at:
    95 ;;		line 14 in file "Programa_principal.c"
    96 ;; Parameters:    Size  Location     Type
    97 ;;		None
    98 ;; Auto vars:     Size  Location     Type
    99 ;;		None
   100 ;; Return value:  Size  Location     Type
   101 ;;                  1    wreg      void 
   102 ;; Registers used:
   103 ;;		wreg, status,2, status,0
   104 ;; Tracked objects:
   105 ;;		On entry : 0/0
   106 ;;		On exit  : 0/0
   107 ;;		Unchanged: 0/0
   108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   109 ;;      Params:         0       0       0       0       0       0       0       0       0
   110 ;;      Locals:         0       0       0       0       0       0       0       0       0
   111 ;;      Temps:          2       0       0       0       0       0       0       0       0
   112 ;;      Totals:         2       0       0       0       0       0       0       0       0
   113 ;;Total ram usage:        2 bytes
   114 ;; Hardware stack levels required when called:    1
   115 ;; This function calls:
   116 ;;		Nothing
   117 ;; This function is called by:
   118 ;;		Startup code after reset
   119 ;; This function uses a non-reentrant model
   120 ;;
   121                           
   122                           	psect	text0
   123  000012                     __ptext0:
   124                           	opt callstack 0
   125  000012                     _main:
   126                           	opt callstack 30
   127                           
   128                           ;Programa_principal.c: 15:     ADCON1bits.PCFG = 0xf;
   129                           
   130                           ;incstack = 0
   131  000012  0E0F               	movlw	15
   132  000014  12C1               	iorwf	4033,f,c	;volatile
   133                           
   134                           ;Programa_principal.c: 16:     TRISD = 0;
   135  000016  0E00               	movlw	0
   136  000018  6E95               	movwf	3989,c	;volatile
   137                           
   138                           ;Programa_principal.c: 17:     TRISBbits.RB0 = 1;
   139  00001A  8093               	bsf	3987,0,c	;volatile
   140                           
   141                           ;Programa_principal.c: 18:     OSCCONbits.IDLEN = 0;
   142  00001C  9ED3               	bcf	4051,7,c	;volatile
   143                           
   144                           ;Programa_principal.c: 19:     INTCON2bits.INTEDG0 = 0;
   145  00001E  9CF1               	bcf	4081,6,c	;volatile
   146                           
   147                           ;Programa_principal.c: 20:     INTCONbits.INT0IE = 1;
   148  000020  88F2               	bsf	4082,4,c	;volatile
   149                           
   150                           ;Programa_principal.c: 21:     INTCONbits.INT0IF = 0;
   151  000022  92F2               	bcf	4082,1,c	;volatile
   152                           
   153                           ;Programa_principal.c: 22:     INTCONbits.GIE = 1;
   154  000024  8EF2               	bsf	4082,7,c	;volatile
   155                           
   156                           ;Programa_principal.c: 23:     LATDbits.LATD0 = 0;
   157  000026  908C               	bcf	3980,0,c	;volatile
   158                           
   159                           ;Programa_principal.c: 24:     w = 1;
   160  000028  0E00               	movlw	0
   161  00002A  6E02               	movwf	_w+1,c
   162  00002C  0E01               	movlw	1
   163  00002E  6E01               	movwf	_w,c
   164  000030                     l726:
   165                           
   166                           ;Programa_principal.c: 26:         LATDbits.LATD0 = ~LATDbits.LATD0;
   167  000030  A08C               	btfss	3980,0,c	;volatile
   168  000032  D002               	goto	u10
   169  000034  0E01               	movlw	1
   170  000036  D001               	goto	u16
   171  000038                     u10:
   172  000038  0E00               	movlw	0
   173  00003A                     u16:
   174  00003A  0AFF               	xorlw	255
   175  00003C  6E03               	movwf	??_main& (0+255),c
   176  00003E  508C               	movf	3980,w,c	;volatile
   177  000040  1803               	xorwf	??_main,w,c
   178  000042  0BFE               	andlw	-2
   179  000044  1803               	xorwf	??_main,w,c
   180  000046  6E8C               	movwf	3980,c	;volatile
   181                           
   182                           ;Programa_principal.c: 27:         _delay((unsigned long)((100)*(20000000/4000.0)));
   183  000048  0E03               	movlw	3
   184  00004A  6E04               	movwf	(??_main+1)& (0+255),c
   185  00004C  0E8A               	movlw	138
   186  00004E  6E03               	movwf	??_main& (0+255),c
   187  000050  0E56               	movlw	86
   188  000052                     u37:
   189  000052  2EE8               	decfsz	wreg,f,c
   190  000054  D7FE               	bra	u37
   191  000056  2E03               	decfsz	??_main& (0+255),f,c
   192  000058  D7FC               	bra	u37
   193  00005A  2E04               	decfsz	(??_main+1)& (0+255),f,c
   194  00005C  D7FA               	bra	u37
   195                           
   196                           ;Programa_principal.c: 28:         while(w == 1){
   197  00005E  D001               	goto	l730
   198  000060                     l25:
   199  000060  0003               	sleep		;# 
   200  000062                     l730:
   201                           
   202                           ;Programa_principal.c: 28:         while(w == 1){
   203  000062  0401               	decf	_w,w,c
   204  000064  1002               	iorwf	_w+1,w,c
   205  000066  A4D8               	btfss	status,2,c
   206  000068  D7E3               	goto	l726
   207  00006A  D7FA               	goto	l25
   208  00006C                     __end_of_main:
   209                           	opt callstack 0
   210                           
   211 ;; *************** function _Sleep_int *****************
   212 ;; Defined at:
   213 ;;		line 34 in file "Programa_principal.c"
   214 ;; Parameters:    Size  Location     Type
   215 ;;		None
   216 ;; Auto vars:     Size  Location     Type
   217 ;;		None
   218 ;; Return value:  Size  Location     Type
   219 ;;                  1    wreg      void 
   220 ;; Registers used:
   221 ;;		status,2, status,0
   222 ;; Tracked objects:
   223 ;;		On entry : 0/0
   224 ;;		On exit  : 0/0
   225 ;;		Unchanged: 0/0
   226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   227 ;;      Params:         0       0       0       0       0       0       0       0       0
   228 ;;      Locals:         0       0       0       0       0       0       0       0       0
   229 ;;      Temps:          0       0       0       0       0       0       0       0       0
   230 ;;      Totals:         0       0       0       0       0       0       0       0       0
   231 ;;Total ram usage:        0 bytes
   232 ;; Hardware stack levels used:    1
   233 ;; This function calls:
   234 ;;		Nothing
   235 ;; This function is called by:
   236 ;;		Interrupt level 2
   237 ;; This function uses a non-reentrant model
   238 ;;
   239                           
   240                           	psect	intcode
   241  000008                     __pintcode:
   242                           	opt callstack 0
   243  000008                     _Sleep_int:
   244                           	opt callstack 30
   245                           
   246                           ;incstack = 0
   247  000008  8205               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   248  00000A  ED36  F000         	call	int_func,f	;refresh shadow registers
   249                           
   250                           	psect	intcode_body
   251  00006C                     __pintcode_body:
   252                           	opt callstack 30
   253  00006C                     int_func:
   254                           	opt callstack 30
   255  00006C  0006               	pop		; remove dummy address from shadow register refresh
   256                           
   257                           ;Programa_principal.c: 35:     w = ~w;
   258  00006E  1E01               	comf	_w,f,c
   259  000070  1E02               	comf	_w+1,f,c
   260                           
   261                           ;Programa_principal.c: 36:     INTCONbits.INT0IF = 0;
   262  000072  92F2               	bcf	4082,1,c	;volatile
   263  000074  9205               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   264  000076  0011               	retfie		f
   265  000078                     __end_of_Sleep_int:
   266                           	opt callstack 0
   267  0000                     
   268                           	psect	rparam
   269  0000                     
   270                           	psect	temp
   271  000005                     btemp:
   272                           	opt callstack 0
   273  000005                     	ds	1
   274  0000                     int$flags	set	btemp
   275  0000                     wtemp8	set	btemp+1
   276  0000                     ttemp5	set	btemp+1
   277  0000                     ttemp6	set	btemp+4
   278  0000                     ttemp7	set	btemp+8
   279                           tosu	equ	0xFFF
   280                           tosh	equ	0xFFE
   281                           tosl	equ	0xFFD
   282                           stkptr	equ	0xFFC
   283                           pclatu	equ	0xFFB
   284                           pclath	equ	0xFFA
   285                           pcl	equ	0xFF9
   286                           tblptru	equ	0xFF8
   287                           tblptrh	equ	0xFF7
   288                           tblptrl	equ	0xFF6
   289                           tablat	equ	0xFF5
   290                           prodh	equ	0xFF4
   291                           prodl	equ	0xFF3
   292                           indf0	equ	0xFEF
   293                           postinc0	equ	0xFEE
   294                           postdec0	equ	0xFED
   295                           preinc0	equ	0xFEC
   296                           plusw0	equ	0xFEB
   297                           fsr0h	equ	0xFEA
   298                           fsr0l	equ	0xFE9
   299                           wreg	equ	0xFE8
   300                           indf1	equ	0xFE7
   301                           postinc1	equ	0xFE6
   302                           postdec1	equ	0xFE5
   303                           preinc1	equ	0xFE4
   304                           plusw1	equ	0xFE3
   305                           fsr1h	equ	0xFE2
   306                           fsr1l	equ	0xFE1
   307                           bsr	equ	0xFE0
   308                           indf2	equ	0xFDF
   309                           postinc2	equ	0xFDE
   310                           postdec2	equ	0xFDD
   311                           preinc2	equ	0xFDC
   312                           plusw2	equ	0xFDB
   313                           fsr2h	equ	0xFDA
   314                           fsr2l	equ	0xFD9
   315                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      2       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Sleep_int in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Sleep_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Sleep_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sleep_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sleep_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sleep_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sleep_int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sleep_int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sleep_int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _Sleep_int                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _Sleep_int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      2       4       1        4.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       4       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       4      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Apr 11 22:54:52 2019

                      _w 0001                       l25 0060                       u10 0038  
                     u16 003A                       u37 0052              __CFG_BOR$ON 000000  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000  
                    l730 0062                      l726 0030             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      wreg 000FE8             __CFG_FOSC$HS 000000  
           __CFG_WDT$OFF 000000                     _main 0012                     btemp 0005  
                   start 000E            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000            __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000  
                  ?_main 0003            __CFG_USBDIV$1 000000                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    ttemp5 0006  
                  ttemp6 0009                    ttemp7 000D                    status 000FD8  
                  wtemp8 0006           __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000  
        __initialization 0078             __end_of_main 006C                   ??_main 0003  
          __activetblptr 000000           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
     __size_of_Sleep_int 0070               __accesstop 0060  __end_of__initialization 0078  
          ___rparam_used 000001           __pcstackCOMRAM 0003               __pnvCOMRAM 0001  
      __end_of_Sleep_int 0078          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  __pcinit 0078                  __ramtop 0800  
                __ptext0 0012           __pintcode_body 006C     end_of_initialization 0078  
                int_func 006C                _TRISBbits 000F93      start_initialization 0078  
              _Sleep_int 0008         __CFG_LPT1OSC$OFF 000000               ?_Sleep_int 0003  
              __pintcode 0008                 _LATDbits 000F8C         __CFG_WDTPS$32768 000000  
             _ADCON1bits 000FC1              _INTCON2bits 000FF1                 __Hrparam 0000  
            ??_Sleep_int 0003                 __Lrparam 0000            __size_of_main 005A  
               int$flags 0005    __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2  
               intlevel2 0000               _OSCCONbits 000FD3  
